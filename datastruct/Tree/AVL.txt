算法思路：
    1、 由新插入的结点到根结点，找出第一个非平衡结点。
    2、 从此结点开始判断1、2、3、4属于那种情况
    3、 旋转

关于AVL树的旋转问题：
     刚开始的时候，我也遇到无法理解的问题。因为在链表和栈及队中都感觉理解的还不透彻的原因吧。因为我一直对与左右调换后有什么区别了解决的不是很清楚。经过自己思考后，我想既然都是指针，那么，也许可以用指针的方法理解。于是
试验了下，果然理解了。
     如果你根据刚才我提示能理解，你会有我一样的感觉。没有理解也没关系。因为每个人的基础不一样啊。
     下面我就来说说我的理解。
        前提：一、你已经理解指针是怎么回事。
	      二、每个结点是由地址之间相互建立关系的。指针变量可以变，地址不可变。一旦指针指向一个地址，那么它周围的地址也就知晓了。
        开始：首先要分清指针和指针变量的区别。很容易就是一个可以变，另一个不可以变。知道这个就可以啦。
	      在树中，比如p2 ＝ p1(都是指针，以下都是指针操作)；
	              我们认为p1的地址赋值给p2的地址。
